#!/bin/bash

remove_old_docker() {
  echo "Удаление старых версий Docker..."
  for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
    sudo apt-get remove -y "$pkg"
    if [ $? -eq 0 ]; then
      echo "$pkg успешно удален."
    else
      echo "Ошибка при удалении $pkg. Пропускаем..."
    fi
  done
}

install_docker() {
  echo "Установка Docker и плагина Compose..."
  sudo apt-get update -y
  sudo apt-get install -y ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings
  sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  sudo chmod a+r /etc/apt/keyrings/docker.asc
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update -y
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  if [ $? -eq 0 ]; then
    echo "Docker и плагин Compose успешно установлены."
  else
    echo "Ошибка при установке Docker. Проверьте логи."
  fi
}

echo -e "\033[1;36m"
echo -e "████╗░██████╗░███████╗████╗  ░█████╗░███████╗░█████╗░███████╗██╗░░░░░░█████╗░"
echo -e "██╔═╝██╔════╝░╚════██║╚═██║  ██╔══██╗╚════██║██╔══██╗╚════██║██║░░░░░██╔══██╗"
echo -e "██║░░██║░░██╗░░░░░██╔╝░░██║  ███████║░░███╔═╝███████║░░███╔═╝██║░░░░░██║░░██║"
echo -e "██║░░██║░░╚██╗░░░██╔╝░░░██║  ██╔══██║██╔══╝░░██╔══██║██╔══╝░░██║░░░░░██║░░██║"
echo -e "████╗╚██████╔╝░░██╔╝░░████║  ██║░░██║███████╗██║░░██║███████╗███████╗╚█████╔╝"
echo -e "╚═══╝░╚═════╝░░░╚═╝░░░╚═══╝  ╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚══════╝╚══════╝░╚════╝░"
echo -e "\033[1;34m"
echo
echo -e "\033[1;32mTelegram community: \033[5;31mhttps://t.me/g7team_ru\033[0m"
echo -e "\033[0m"
echo "Обновление списка пакетов и установка обновлений..."
sudo apt update -y && sudo apt upgrade -y

# Установка необходимых пакетов
echo "Установка необходимых пакетов..."
PACKAGES=(
  curl
  git
  jq
  lz4
  build-essential
  unzip
  make
  gcc
  ncdu
  cmake
  clang
  pkg-config
  libssl-dev
  python3-pip
  protobuf-compiler
  dos2unix
  screen
)

for PACKAGE in "${PACKAGES[@]}"; do
  echo "Установка $PACKAGE..."
  sudo apt install -y "$PACKAGE"
  if [ $? -eq 0 ]; then
    echo "$PACKAGE успешно установлен."
  else
    echo "Ошибка при установке $PACKAGE. Пропускаем..."
  fi
done

# Удаление старых версий Docker
remove_old_docker

# Установка Docker и плагина Compose
install_docker

# Печать завершения процесса
echo "Начальная настройка сервера завершена."
